Тебе нужно создать React приложение с нуля для выполнения CRUD операций над данными, через REST API. Сейчас тут создано базовое приложение React - удали из него всё лишнее и создай необходимые файлы.
Учти, данные между собой пересекаются через ID, это нужно учитывать. Спецификация по REST API бэкенда находится в файле openapi.yml
Главная странница должна выглядеть следующим образом: 
1. Header вверху с названием сайта
2. Ниже распологается панель навигации между компонентами:
2.1. РПД. Просмотр в виде таблицы при открытии, у каждого элемента есть кнопка просмотра конкретного элемента в виде эмодзи глаза, кнопка редактировать в виде эмодзи карандаша, и кнопка удалить в виде эмодзи красного мусорного бака. Над таблицей справа должна быть кнопка Добавить.
2.2: Компетенции: Просмотр в виде таблицы при открытии, у каждого элемента есть кнопка просмотра конкретного элемента в виде эмодзи глаза, кнопка редактировать в виде эмодзи карандаша, и кнопка удалить в виде эмодзи красного мусорного бака. Над таблицей справа должна быть кнопка Добавить.
2.3: Индикаторы: Просмотр в виде таблицы при открытии, у каждого элемента есть кнопка просмотра конкретного элемента в виде эмодзи глаза, кнопка редактировать в виде эмодзи карандаша, и кнопка удалить в виде эмодзи красного мусорного бака. Над таблицей справа должна быть кнопка Добавить.
2.4: Технологии: Просмотр в виде таблицы при открытии, у каждого элемента есть кнопка просмотра конкретного элемента в виде эмодзи глаза, кнопка редактировать в виде эмодзи карандаша, и кнопка удалить в виде эмодзи красного мусорного бака. Над таблицей справа должна быть кнопка Добавить. Также дополнительные кнопки: 
2.4.1: Обновить по вакансиям
2.4.2: Соотнести с ключевыми словами
2.4.3.: Рассчитать востребованность
2.5: Группы технологий: Просмотр в виде таблицы при открытии, у каждого элемента есть кнопка просмотра конкретного элемента в виде эмодзи глаза, кнопка редактировать в виде эмодзи карандаша, и кнопка удалить в виде эмодзи красного мусорного бака. Над таблицей справа должна быть кнопка Добавить. Также дополнительные кнопки: 
2.5.1: Соотнести с технологиями
2.5.2: Рассчитать востребованность
2.6: Ключевые слова. Просмотр в виде таблицы при открытии, у каждого элемента есть кнопка просмотра конкретного элемента в виде эмодзи глаза, кнопка редактировать в виде эмодзи карандаша, и кнопка удалить в виде эмодзи красного мусорного бака. Над таблицей справа должна быть кнопка Добавить.
2.7: Вакансии. Просмотр в виде таблицы при открытии, у каждого элемента есть кнопка просмотра конкретного элемента в виде эмодзи глаза, кнопка редактировать в виде эмодзи карандаша, и кнопка удалить в виде эмодзи красного мусорного бака. Над таблицей справа должна быть кнопка Добавить. Также дополнительно кнопка: Обновить
2.8: Эксперты. Просмотр в виде таблицы при открытии, у каждого элемента есть кнопка просмотра конкретного элемента в виде эмодзи глаза, кнопка редактировать в виде эмодзи карандаша, и кнопка удалить в виде эмодзи красного мусорного бака. Над таблицей справа должна быть кнопка Добавить.
2.9: Мнения экспертов. Просмотр в виде таблицы при открытии, у каждого элемента есть кнопка просмотра конкретного элемента в виде эмодзи глаза, кнопка редактировать в виде эмодзи карандаша, и кнопка удалить в виде эмодзи красного мусорного бака. Над таблицей справа должна быть кнопка Добавить.

На каждой странице с просмотром должна быть таблица с выводом основной информации по соответствующему объекту.

----------------------------------

Данное приложение запускается и получает данные от бэкенда, но тут неправильное отображение данных. 
Полные данные по API моего бэкенда находятся в файле openapi.yaml. Далее я очень подробно распишу замечания по каждой из вкладок, что показывается неправильно, как оно должно отображаться и API, по которым оно должно обращаться. В тексте я указывал адреса API, поэтому более подробную информацию о каждом из API можно будет получить в файле openapi.yaml.

Начнём с вкладки РПД. На странице РПД есть таблица, в которой указаны ID, название, описание и кнопки действий. На данной странице ID отображается корректно, а вот название и описание - не отображаются. Во-первых, давай заменим отображение ID на порядковый номер в таблице. Во-вторых, проверь, что название РПД берётся из поля disciplineName и отображается. В третьих, у РПД нет поля описание, но есть поле год (year). Замени столбец описание на год, и проверь отображение.

Дальше, та же страница РПД, тут есть кнопка Добавить. При её нажатии, открывается окно с вводом названия и описания. В этом окне нужно внести изменения. Во-первых, у РПД нет поля описание, вместо него - выбор года. Во-вторых, для добавления РПД недостаточно выбора названия и года, нужно добавить выбор индикаторов компетенций для данной РПД (поле competencyAchievementIndicators). Получить список всех индикаторов компетенций можно через список компетенций - GET api/competencies. Данный API возвращает список компетенций, а потом можно вызвать GET api/competencies/{competencyNumber}/indicators для получения списка всех индикаторов компетенции по её ID. В РПД соответственно должен добавляться список этих индикаторов. Их можно реализоваться через выбор секбоксами или другим способом для множественного выбора. Добавление РПД происзводится запросом на POST api/rpd

По аналогии нужно поменять логику работы кнопки просмотр, которая находится на каждой строке с РПД. Получение данных об РПД производится запросом GET api/rpd. Сейчас тут открывается окно, в котором отображается ID, и неработающие название и описание. Нужно проверить, что название берётся из поля disciplineName. ID давай оставим без изменения. А вот описание нужно заменить на поле год (year). Также, по аналогии с добавлением, нужно на странице просмотра отобразить список индикаторов с группировкой по компетенциям, к которым они принадлежат. То есть, если у РПД может быть несколько индикаторов одной компетенции, соответственно пишется название и описание компетенции, после чего блоки индикаторов этой компетенции, которые есть в данном РПД с названием и описанием индикатора, а также значениями Знать, Уметь, Владеть из индикатора. Данные значени (знать, уметь, владеть), можно получить по GET api/competencies/{competencyNumber}/indicators/number/{number}, где competencyNumber - номер компетенции, а number - номер индикатора.

Аналогично нужно изменить окно редактирования РПД. Нужно сделать поле ID нередактируемым, проверить корректность отображения названия, заменить описание на выбор года - это по аналогии с кнопкой просмотр. Дальше Нужно сделать выбор индикаторов компетенций - их можно сделать по аналогии с окном добавления РПД - сделать список компетенций и под каждой компетенцией будет находиться все её индикаторы, которые можно выбрать чекбоксами, и поля Знать, уметь, владеть. Запрос на редактирвоание РПД должен идти на PUT api/rpd/{id}.
Также стоит проверить корректность работы кнопку удаления РПД. Перед удалением должно появиться окно с подтверждением действия - проверь, существует ли оно. Если да, проверь, что запро на удаление идёт на DELETE api/rpd/{id}.

Теперь перейдём к странице компетенции. Тут есть лишний столбец Название. Оно не используется, поэтому давай его уберём. Вместо ID на странице отображения всех компетенций, давай сделаем отображение порядкового номера. Также нужно убрать поле Название в окне просмотра, которое открывается при нажатии на кнопку просмотра, а также добавить отображение списка ключевых слов, который должен приходит по GET api/competencies/{id} в поле keywords. Аналогично, нужно убрать поле Название из окна кнопки редактирования компетенции. Также проверь, что API редактирования компетенции обращается на PUT api/competencies/{id}. Также на странице редактирования компетенции необходимо вывести список ключевых слов в виде чекбоксов, с установленными галочками напротив имеющихся у компетенции ключевых слов. Список всех ключевых слов можно получить по GET api/keywords, а задать ключевые слова для компетенции можно запросом через стандартный запрос редактирования компетенций: PUT api/competencies/{id}. 
Также проверь, что запрос на удаление отправляется на DELETE api/competencies/{id}. При этом проверь, что при удалении компетенции, сайт запрашивает подтверждение.
Также нужно изменить процесс добавления компетенции. При нажатии на кнопку Добавить на странице компетенций, открывается окно. В нём нужно убрать поле название. Добавление компетенции происходит отправкой запроса на POST api/competencies. Ещё на страницу компетенций нужно добавить кнопку "Выделить ключевые слова с помощью ИИ", которая должна отправлять запрос на POST api/competencies/{id}/keywords/generate. Стиль данной кнопки можно взять с других страниц, например, с кнопок "Рассчитать востребованность" с других страниц.

Дальше, страница индикаторы. Сейчас в правой части страницы есть выпадающий список с выбором компетенций. При выборе той или иной компетенции, меняется таблица с индикаторами. Давай упростим эту страницу - уберём выпадающий список с компетенциями, а вместо этого сделаем отображаение всех индикаторов на одной странице, с группировкой по компетенциям. Также, при дейстии просмотр индикатора, в окне просмотра, давай уберём отображение поля ID. Также, в этом же окне давай поднимем поле "Номер компетенции:" на первую строку. После этого нужно отредактировать окно редактирования индикатора. Сейчас поле "Номер компетенции:" вписывается текстом - замени это поле выпадающим списком компетенций. Проверь, что редактирование индикатора происходит на PUT api/competencies/{competencyNumber}/indicators/{id}. Также проверь, что для удаления индикатора выдаётся подтверждение, а удаление происходит по DELETE api/competencies/{competencyNumber}/indicators/{id}. Ещё на этой странице есть кнопка "добавить", на ней почему-то остутсвуют стили - нужно применить ей стиль, как у кнопок добавления на других странциах.

Далее, страница Технологии. Начнём с просмотра списка технологий, давай заменим колонку ID на порядковый номер в таблице. Обрати внимание, что данные о технологиях получаются через GET api/work-skills. Также я вижу значение Востребованность у всех стоит как значение 0, скорее всего данные запрашиваются некорректно - значение востребованности обозначается как marketDemand. Также учти, что значение востребованности указывается как число от 0 до 1, а отобразить нужно проценты. Если значение менее 0.1 процента, то вместо очень маленького числа укажи просто "<0.1%". Сами значения округляй до 2 знаков после запятой. Также, в этой же таблице просмотра есть столбец Группа - сами группы возвращаются из API как skillsGroupId, по этому ID можно получить название группы, через GET api/skills-groups/{id}, где поле description отвечает за название. Соответственно, сделай вывод названия группы технологий. После этого перейдём к кнопке просмотра, которая находится в колонке действий. В ней аналогично нужно проверить правильность отображения востребованности и названия группы технологий. Дальше, в той же колонке действия, на кнопке редактирование открывается окно редактирования. Тут значение ID группы технологий задаётся цифрой, это не удобно - давай заменим его на выпадающий список групп технологий. Получить список всех групп технологрй можно через GET api/skills-groups. Также проверь API удаления технологий, это должен быть запрос на DELETE api/work-skills/{id}. То же самое нужно проделать с кнопкой "Добавить" на этой же странице - тут при добавлении технологии необходимо ввести ID группы технологий - давай сделаем выбор группы через выпадающий список. Также проверь работу кнопок "Соотнести с ключевыми словами" - она должна отправлять запрос на POST keywords/match/all, а кнопка "Рассчитать востребованность" должна отправлять запрос на GET update/workSkillsMarketDemand.

Теперь перейдём к странице Группы технологий. Начнём с таблице просмотра. Первое, давай вместо отображения ID будем отображать порядковый номер в таблице. Дальше, у нас есть колонка востребованность, в ней отображается значение востребованности от 0 до 1. Нужно сделать отображение этих данных в процентах с округлением до 2 знаков после запятой. Если значение менее 0.1 процента, то вместо очень маленького числа укажи просто "<0.1%". Дальше перейдём в колонку действий. Там есть кнопка просмотра, которая, в которой нужно аналогично указать значение востребованности в процентах, с округлением до 2 знаков после запятой. Также на странице просмотра давай сделаем вывос списка технологий, которые принадлежат данной группе, получить этот список можно через GET api/skills-groups/{id}/work-skills. После этого перейдём к кнопке редактирования - по нажатию открывается окно, где есть значение востребованность, и если оно равно 0, то поле пустое, давай сделаем, чтобы туда ставилось значение 0. Дальше на странице просмотра групп технологий есть 2 кнопки - первая, "Соотнести с технологиями", она должна делать запрос на POST api/skills-groups/match-to-work-skills, вторая кнопка "Рассчитать востребованность", она должна делать запрос на PUT api/skills-groups/update-market-demand.

Дальше пойдём на страницу Ключевые слова. Сейчас она не реализована, а вместо неё стоит заглушка. Давай реализуем данную страницу по схеме, аналогичной для других страниц, т.е. чтобы на странице было отображения списка всех ключевых слов, с кнопками действий - просмотр, редактирование, удаление, а также над таблицей кнопка добавления данных. Соответственно, как и на других страницах ,давай в таблице выводить не ID, а порядковый номер в таблице. Сами API для упарвления ключевыми словами находятся по адресу /api/keywords.

Дальше перейдём к странице вакансий. Давай заменим колонку ID на порядковый номер в списке. Дальше, в колонке дата публикации сейчас дата отображается в формате timestamp. Давай преобразуем её в формат dd.MM.yyyy hh:mm со временем по Москве (+3 часа от Гринвича). Дальше пойдём на этой же странице в блок действий. При нажатии на кнопку Просмотра, открывается окно просмотра информации о вакансии. Давай в нём также изменим отображение даты, а ещё, ниже, в поле "Описание", текст вакансии отображается как вырванный из контекста HTML (вероятно он отображается как экранированный HTML). Можешь очистить его от html тегов? Если это невозможно, я сделаю это на своём бэкенде. Также, в этом окне внизу есть поле "навыки", в котором у всех вакансий стоит значение "нет", хотя они есть, проверь, что данные берутся с GET api/vacancies, из поля skills, в котором название каждого из навыков находится в поле description. Дальше на странице вакансий перейдём к кнопке редактирования. Тут в меню выбора даты и времени должно устанавливаться сразу то время и дата, которые есть сейчас у вакансии, чтобы при сохрании не слетела дата.

После этого перейдём к станице Эксперты. На этой странице сейчас не отображаются данные, поэтому проверь, что данные запрашиваются с соответствующего API: GET api/experts. Сейчас на странице указаны такие колонки, ФИО, email и организация - их в моём API нет, а вместо них есть поля Название и Доверие, соответсвенно, нужно заменить данные колонки на Название и Доверие, которые должны браться из полей: name и trust соответственно. Также обрати внимание, что значение доверия (trust) идёт как число от 0 до 1 и обозначает процент доверия, его нужно отобразить в виде процентов. Ещё давай заменим колонку ID на порядковый номер в списке. Дальше перейдём к кнопками действий. Начнём с просмотра. Тут данные об эксперте также не отображаются. Соответственно в этом окне необходимо убрать лишние поля и оставить только ID, название и доверие. Аналогично нужно сделать и с кнопкой редактирования - сейчас тут открывается окно с разными полями, которых нет, а должно быть редактирование полей Название и Доверие. Соответственно, редактирование происходит через API PUT api/experts/{id}, а удаление эксперта через DELETE api/experts/{id}. Аналогичные действия нужно произвести с кнопкой добавления на странице экспертов. Сейчас в окне добавления очень много полей, которые не относятся к реальности. В окне добавления также должно быть только 2 поля, это название и доверие в процентах. Добавление эксперта должно происходить через API POST api/experts.

Также есть проблема со страницей Мнения экспертов. Проверь, что получение информации о мнениях экспертов происходит через GET api/expert-opinions. Данный API возвращает список мнений экспертов, где указаны ID эксперта, индикатора и навыка, к которому относится данное мнение, а также важность навыка по его мнению. Соответственно, вместо столбцов: Эксперт, Тема, Оценка, Дата, нужно сделать следующие столбцы: Эксперт, Индикатор, Навык, Важность. Название эксперта можно получить по expertId через GET api/experts/{id}, Индикатор пока отображай просто как ID, потому что в дальнейшем будет изменён API их получения, название навыка можно получить по workSkillId через GET api/work-skills/{id}, а значение важности skillImportance нужно отобразить в процентах. Аналогично нужно отредактировать действия на кнопках просмотра и редактирования - в окне просмотра должны отображаться ID, Эксперт, Индикатор, Навык и Важность. Такие же поля, кроме ID должны быть в окне редактирования мнения эксперта. Просмотр мнения должен работать через GET api/expert-opinions/{id}, а редактирование через PUT api/expert-opinions/{id}. Удаление мнения должно работать через DELETE api/expert-opinions/{id}. Аналогичные требования и к кнопке добавления мнения эксперта. В открывающемся окне необходимо сделать выпадающие списки: Эксперт и Навык, значение индикатора пока вводим через номер ID, и значение важности как значение в процентах. Добавление мнения эксперта должно производиться через POST api/expert-opinions

------------------------------

Мне нужно расширить функционал данного сайта. Мне нужно добавить управление новыми объектами. Все добавляемые действия сводятся к интерфейсам для CRUD операций. Все API бэкенда лежат в файле openapi.yaml. А с примерами реализации ты можешь ознакомиться на страницах компетенции, Индикаторы, Технологии и других - все новые страницы нужно выполнить в таком же стили и добавить для них ссылки на панель навигации.

Первая страница, которую мне нужно добавить - страница Head Hunter. На ней будет происходить управление сохранёнными поисковыми запросами для Head Hunter. API управления запросами находятся по api/saved-searches. Соответственно, тут нужно по аналогии с другами страницами, реализовать просмотр всех сохранённых запросов, а также добавить действия просмотра, редактирования и удаления конкретного запроса. В общей таблице со всеми поисковыми запросами, вместо ID укажи порядковый номер в таблице. Редактирование тут простое, всего лишь меняется текст запроса - searchQuery. И кнпока Добавить, по аналогии с другими страницами.

Следующая страница, это Прогнозы. На этой странице должны отображаться прогнозы (предсказания) от разных источников о том, какие технологии будут востребованы в будущем. За прогнозы отвечает api/foresights. На данной странице аналогично нужно сделать вывод списка всех прогнозов, с кнопками просмотра, редактирвоания и удаления. Для просмотра и редактирования используется workSkillId. Для просмотра сделай отображение названия навыка по его workSkillId, а для редактирования сделай выпадающий список список навыков. Аналогичный выпадающий список сделай и для кнопки Добавить предсказаний.

------------------------------

Мне нужно создать новую страницу на этом сайте, это будет страница управления навыками РПД. Эта страница не должна не должна находиться в панеле навигации, она будет открываться по надатию на кнопку для каждого РПД индивидуально. В целом, управление навыками РПД производится через api/rpd-skills. Первое, что нужно сделать, это на странице РПД, в таблице, которая отражает список РПД, в колонке действия, добавить ещё одну кнопку, которая будет отвечать за управление навыками данного РПД. Так как все кнопки действий обозначаются через эмодзи, то и эту кнопку нужно обозначить через эмодзи. API для получения информации о навыках в РПД - GET api/rpd-skills/rpd/{rpdId}. При нажатии на эту кнопку должна открываться полноценная новая страница, которая должна быть выполнена по аналогии с основной страницей РПД - то есть, на ней все навыки должны отображаться в виде таблицы, в которой будут отображаться порядковый номер, название навыка (его нужно получить по workSkillId), время (time) в академических часах (оно от API жуе приходит в академических часах), а также кнопки действий - просмотр, редактирование и удаление. При редактировании (PUT api/rpd-skills/{id}) выбор навыка (workSkillId) должен производиться через выпадающий список, а время должно указываться цифрами в академических часах. Также должна быть кнопка Добавить, по аналогии со страницей РПД, где также через выпадающий список должен выбираться навык и время.

// отдельно: Навыки РПД
// DST агрегация
// рекомендации для РПД (старое)

------------------------------

// Подтянуть ollama embeddings в Docker для навыков. 
// Подключить GigaChat для очистки одинаковых навыков.
// Подключить GigaChat для выделения ключевых слов, вместо Ollama.
// Эмбеддинги для вакансий - средняя вакансия.

